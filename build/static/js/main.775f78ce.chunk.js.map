{"version":3,"sources":["Components/Card.js","Components/ImageSlider.js","Util/httpClient.js","Util/base.js","Components/Navbar.js","Pages/Home.js","Components/Dropdown.js","Components/Table.js","Components/useResizeObserver.js","Components/GeoChart.js","Components/TimeSeries.js","Components/PieChart.js","Pages/Infographics.js","Pages/NotFound.js","Pages/Login.js","Pages/Register.js","Components/colors.js","Pages/NewRecord.js","App.js","reportWebVitals.js","index.js"],"names":["Card","info","setTarget","target","colors","history","useHistory","className","style","color","length","fg","backgroundColor","bg","name","fontSize","fontWeight","shortDescription","onClick","push","size","icon","faArrowRight","ImageSlider","allTargets","useState","displayed","setDisplayed","textOnLeft","setTextOnLeft","useEffect","interval","setInterval","clearInterval","textArea","fullDescription","imageArea","src","img","height","alt","TransitionGroup","CSSTransition","timeout","classNames","faChevronLeft","faChevronRight","background","map","item","idx","width","margin","borderRadius","axios","create","withCredentials","BASE_URL","Navbar","user","a","httpClient","post","window","location","reload","Home","demography","setDemography","Dropdown","list","label","dropdownStatus","setDropdownStatus","type","position","top","right","faChevronUp","faChevronDown","role","faCheck","Table","activeArea","fetchAreaDetails","id","get","resp","console","log","setRows","data","rows","loading","columns","field","headerName","pageSize","rowHeight","rowsPerPageOptions","useResizeObserver","ref","dimensions","setDimensions","observeTarget","current","resizeObserver","ResizeObserver","entries","forEach","entry","contentRect","observe","unobserve","GeoChart","subTarget","myData","setActiveArea","group","states","date","svgRef","groups","useRef","wrapperRef","selected","setSelected","svg","select","tooltip","append","attr","colorScale","scaleLinear","domain","range","getBoundingClientRect","projection","geoMercator","fitSize","precision","pathGenerator","zoom","on","event","transform","scaleExtent","geoPath","getScore","Math","random","selectAll","features","join","d","transition","duration","this","html","properties","st_nm","pageX","pageY","feature","TimeSeries","setDate","series","setSeries","dates","setDates","Object","key","groupWise","values","vals","x","y","overall","districtWise","yy","newSeries","chart","stacked","enabled","autoScaleYaxis","toolbar","autoSelected","dataLabels","markers","title","text","align","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","yaxis","subTargets","xaxis","shared","formatter","val","options","PieChart","newseries","value","labels","newlabels","getLabels","responsive","breakpoint","legend","Infographics","setSubTarget","today","Date","toISOString","substr","setData","setGroup","setGroups","area","setArea","fetchData","newGroups","state","population","sexRatio","display","justifyContent","NotFound","Login","email","setEmail","password","setPassword","logInUser","status","href","onChange","e","Register","phone","setPhone","setName","district","setDistrict","setState","districts","setDistricts","fetchDistricts","fetchGroups","registerUser","district_id","NewRecord","targets","setStatus","addRecord","sub_target_id","message","App","setAllTargets","setUser","setStates","fetchStates","fetchTargets","fetchUser","exact","path","render","props","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.775f78ce.chunk.js","sourcesContent":["import { faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { useHistory } from \"react-router\";\nexport default function Card({ info, setTarget, target, colors }) {\n  let history = useHistory();\n  return (\n    <div\n      className=\"target-card\"\n      style={{\n        color: colors[target % colors.length].fg,\n        backgroundColor: colors[target % colors.length].bg,\n      }}\n    >\n      <h1>{info.name}</h1>\n      <p style={{ fontSize: \"20px\", fontWeight: \"500\" }}>\n        {info.shortDescription}\n      </p>\n      <div className=\"forward-link\" key={target}>\n        <button\n          className=\"info-link\"\n          onClick={() => {\n            setTarget(target);\n            history.push(\"/infographics\");\n          }}\n        >\n          <FontAwesomeIcon size=\"2x\" icon={faArrowRight} className=\"arrow\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n","import {\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { React, useState, useEffect } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { useHistory } from \"react-router-dom\";\nexport default function ImageSlider({ allTargets, setTarget, colors }) {\n  let history = useHistory();\n  const [displayed, setDisplayed] = useState(0);\n  const [textOnLeft, setTextOnLeft] = useState(false);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setDisplayed((displayed) => (displayed + 1) % allTargets.length);\n      setTextOnLeft((textOnLeft) => !textOnLeft);\n    }, 12000);\n    return () => clearInterval(interval);\n  }, [allTargets.length]);\n  let textArea = (\n    <div\n      style={{\n        backgroundColor: colors[displayed % colors.length].bg,\n        color: colors[displayed % colors.length].fg,\n      }}\n      className=\"slider-text\"\n      onClick={() => {\n        setTarget(displayed);\n        history.push(\"/infographics\");\n      }}\n    >\n      <div className=\"text-container\">\n        <h1>{allTargets[displayed].name}</h1>\n        <span>{allTargets[displayed].fullDescription}</span>\n      </div>\n    </div>\n  );\n  let imageArea = (\n    <div className=\"slider-image\">\n      <img src={allTargets[displayed].img} height=\"500px\" alt=\"SDG2\"></img>\n    </div>\n  );\n  return (\n    <div className=\"image-slider\">\n      <TransitionGroup>\n        <CSSTransition key={displayed} timeout={200} classNames=\"messageout\">\n          <div className=\"content\">\n            {textOnLeft ? textArea : imageArea}\n            {textOnLeft ? imageArea : textArea}\n          </div>\n        </CSSTransition>\n      </TransitionGroup>\n\n      <button\n        onClick={() => {\n          setDisplayed((displayed - 1 + allTargets.length) % allTargets.length);\n\n          setTextOnLeft(!textOnLeft);\n        }}\n        className=\"button-left\"\n      >\n        <FontAwesomeIcon icon={faChevronLeft} />\n      </button>\n      <button\n        onClick={() => {\n          setDisplayed((displayed + 1) % allTargets.length);\n          setTextOnLeft(!textOnLeft);\n        }}\n        className=\"button-right\"\n      >\n        <FontAwesomeIcon icon={faChevronRight} />\n      </button>\n      <div style={{ background: \"none\" }} className=\"dots\">\n        {allTargets.map((item, idx) => (\n          <div\n            onClick={() => {\n              setDisplayed((displayed) => idx);\n            }}\n            style={{\n              backgroundColor: `${displayed === idx ? \"grey\" : \"white\"}`,\n              width: \"10px\",\n              height: \"10px\",\n              margin: \"1px\",\n              borderRadius: \"5px\",\n            }}\n            key={idx}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\n\nexport default axios.create({\n  withCredentials: true,\n});\n","const DEBUG = false;\nconst BASE_URL = DEBUG\n  ? \"//127.0.0.1:5000/\"\n  : \"https://pandemicdashboard.herokuapp.com/\";\nexport { BASE_URL };\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport httpClient from \"../Util/httpClient\";\n\nimport { BASE_URL } from \"../Util/base\";\nexport default function Navbar({ user }) {\n  let history = useHistory();\n  return (\n    <div className=\"navbar\">\n      <div className=\"left\">\n        <button\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          Home\n        </button>\n        <button\n          onClick={() => {\n            history.push(\"/infographics\");\n          }}\n        >\n          Dashboard\n        </button>\n      </div>\n      <div className=\"right\">\n        {user !== null && <span>Welcome, {user.name}</span>}\n        {user === null && (\n          <button\n            onClick={() => {\n              history.push(\"/login\");\n            }}\n          >\n            Login\n          </button>\n        )}\n        {user !== null && (\n          <button\n            onClick={() => {\n              history.push(\"/new\");\n            }}\n          >\n            Add New\n          </button>\n        )}\n        {user !== null && (\n          <button\n            onClick={async () => {\n              const resp = await httpClient.post(BASE_URL + \"logout\");\n              window.location.reload();\n            }}\n          >\n            Logout\n          </button>\n        )}\n        {user === null && (\n          <button\n            onClick={() => {\n              history.push(\"/register\");\n            }}\n          >\n            Register\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Card from \"../Components/Card\";\nimport ImageSlider from \"../Components/ImageSlider\";\nimport Navbar from \"../Components/Navbar\";\nexport default function Home({\n  allTargets,\n  setTarget,\n  demography,\n  setDemography,\n  user,\n  colors,\n}) {\n  let history = useHistory();\n  return (\n    <div className=\"home\">\n      <div className=\"image-slider-area\">\n        <ImageSlider\n          allTargets={allTargets}\n          setTarget={setTarget}\n          colors={colors}\n        />\n      </div>\n      <div className=\"all-targets\">\n        <div className=\"all-targets-container\">\n          {allTargets.map((item, idx) => (\n            <Card\n              info={item}\n              setTarget={setTarget}\n              target={idx}\n              key={idx}\n              colors={colors}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {\n  faChevronDown,\n  faChevronUp,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { React, useState } from \"react\";\n\nexport default function Dropdown({ list, label, displayed, setDisplayed }) {\n  const [dropdownStatus, setDropdownStatus] = useState(false);\n  const alterDropdownStatus = () => {\n    setDropdownStatus(!dropdownStatus);\n  };\n  return (\n    <div className=\"dropdown\">\n      <div className=\"dropdown-label\">\n        <span>{label}:&emsp;</span>\n      </div>\n      <div className=\"dropdown-clickable\">\n        <button\n          type=\"button\"\n          className=\"dropdown-header\"\n          onClick={alterDropdownStatus}\n        >\n          {list[displayed]}&emsp;\n          <FontAwesomeIcon\n            style={{\n              color: \"#666666\",\n              position: \"absolute\",\n              top: \"18px\",\n              right: \"12px\",\n            }}\n            className=\"dropdown-icon\"\n            icon={dropdownStatus ? faChevronUp : faChevronDown}\n          />\n        </button>\n        {dropdownStatus && (\n          <div role=\"list\" className=\"dd-list\">\n            {list.map((item, idx) => (\n              <button\n                type=\"button\"\n                className=\"dd-list-item\"\n                onClick={() => {\n                  setDisplayed(idx);\n                }}\n                key={idx}\n              >\n                {item}{\" \"}\n                {displayed === idx ? <FontAwesomeIcon icon={faCheck} /> : \"\"}\n              </button>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { React, useState, useEffect } from \"react\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport httpClient from \"../Util/httpClient\";\n\nimport { BASE_URL } from \"../Util/base\";\nexport default function Table({ activeArea }) {\n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 70 },\n    { field: \"name\", headerName: \"Name\", width: 120 },\n    { field: \"phone\", headerName: \"Phone Number\", width: 600 },\n  ];\n  const fetchAreaDetails = async (id) => {\n    try {\n      if (id == -1) id = 0;\n      const resp = await httpClient.get(BASE_URL + \"users/\" + id);\n      console.log(resp);\n      setRows(resp.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    fetchAreaDetails(activeArea);\n  }, [activeArea]);\n  return (\n    <div className=\"table-container\">\n      <DataGrid\n        rows={rows}\n        loading={rows.length === 0}\n        columns={columns}\n        pageSize={20}\n        rowHeight={30}\n        rowsPerPageOptions={[20]}\n      />\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\n/**\n * Hook, that returns the current dimensions of an HTML element.\n * Doesn't play well with SVG.\n */\n\nconst useResizeObserver = ref => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver(entries => {\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport {\n  select,\n  geoPath,\n  geoMercator,\n  scaleThreshold,\n  event,\n  scaleLinear,\n  zoom,\n} from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport data from \"../Util/geo.json\";\nfunction GeoChart({\n  target,\n  subTarget,\n  myData,\n  activeArea,\n  setActiveArea,\n  demography,\n  states,\n  date,\n  group,\n  groups,\n}) {\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [selected, setSelected] = useState(null);\n\n  const getMax = () => {\n    let maxVal = 0;\n    for (let [key, val] of Object.entries(\n      myData[date][groups[group]][\"districtWise\"]\n    ))\n      maxVal = Math.max(val, maxVal);\n    return maxVal;\n  };\n\n  // will be called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const container = select(wrapperRef.current);\n    const tooltip = container\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .attr(\"id\", \"tooltip\")\n      .style(\"opacity\", 0);\n    const colorScale = scaleLinear().domain([0, 100]).range([\"white\", \"red\"]);\n\n    // use resized dimensions\n    // but fall back to getBoundingClientRect, if no dimensions yet.\n    const { width, height } =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    // projects geo-coordinates on a 2D plane\n    const projection = geoMercator()\n      .fitSize([width, height], selected || data)\n      .precision(1000);\n\n    const zoomer = zoom()\n      .on(\"zoom\", (event) => {\n        svg.attr(\"transform\", event.transform);\n      })\n      .scaleExtent([1, 40]);\n\n    let mouseOver = function (d) {\n      svg\n        .selectAll(\".country\")\n        .transition()\n        .duration(200)\n        .style(\"opacity\", 0.5);\n      select(this).transition().duration(200).style(\"opacity\", 1);\n      tooltip.style(\"opacity\", 0.9);\n      tooltip\n        .html(() => {\n          return (\n            d.properties.name +\n            \", \" +\n            d.properties.st_nm +\n            \" (\" +\n            getScore(d.properties.id) +\n            \")\"\n          );\n        })\n        .style(\"left\", `${event.pageX}px`)\n        .style(\"top\", `${event.pageY - 150}px`);\n    };\n\n    let mouseLeave = function () {\n      svg.selectAll(\".country\").transition().duration(200).style(\"opacity\", 1);\n      tooltip.style(\"opacity\", 0);\n    };\n\n    // takes geojson data,\n    // transforms that into the d attribute of a path element\n    const pathGenerator = geoPath().projection(projection);\n\n    function getScore(id) {\n      //return myData[date][groups[group]][\"districtWise\"][id];\n      return 100 * Math.random();\n    }\n\n    // render each country\n    svg\n      .selectAll(\".country\")\n      .data(data.features)\n      .join(\"path\")\n      .style(\"opacity\", 1)\n      .on(\"mouseover\", mouseOver)\n      .on(\"mouseleave\", mouseLeave)\n      .on(\"click\", (feature) => {\n        setSelected(selected === feature ? null : feature);\n        tooltip.style(\"opacity\", 0);\n        if (activeArea === feature.properties.id) {\n          setActiveArea(-1);\n        } else {\n          setActiveArea(feature.properties.id);\n        }\n      })\n      .transition()\n      .attr(\"class\", \"country\")\n      .attr(\"fill\", (feature) => colorScale(getScore(feature.properties.id)))\n      .attr(\"d\", (feature) => pathGenerator(feature));\n\n    // render text\n  }, [\n    dimensions,\n    target,\n    subTarget,\n    activeArea,\n    myData,\n    demography,\n    setActiveArea,\n    group,\n  ]);\n\n  return (\n    <div ref={wrapperRef} style={{ position: \"relative\", width: \"50%\" }}>\n      <svg className=\"map-points\" ref={svgRef}></svg>\n      <div className=\"axis\">\n        {/* {colors.map((color, idx) => {\n          return (\n            <div className=\"legend-item\" key={idx}>\n              <button style={{ background: color }}></button>\n              <span>&emsp;{names[idx]}</span>\n            </div>\n          );\n        })} */}\n      </div>\n    </div>\n  );\n}\nexport default GeoChart;\n","import { getGridDateOperators } from \"@mui/x-data-grid\";\nimport { active } from \"d3-transition\";\nimport { React, useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nexport default function TimeSeries({\n  group,\n  groups,\n  activeArea,\n  date,\n  setDate,\n  data,\n  subTarget,\n  allTargets,\n  target,\n}) {\n  const [series, setSeries] = useState([]);\n  const [dates, setDates] = useState([]);\n  useEffect(() => {\n    if (dates === []) {\n      let newdates = [];\n      for (const [key, value] of Object.entries(data)) {\n        dates.push(key);\n      }\n      setDates(newdates);\n    }\n  }, [dates]);\n\n  useEffect(() => {\n    let groupWise = {};\n    for (const [date, values] of Object.entries(data)) {\n      for (const [groupId, vals] of Object.entries(values)) {\n        if (vals.name in groupWise) {\n          groupWise[vals.name].push({\n            x: date,\n            y: activeArea === -1 ? vals.overall : vals.districtWise[activeArea],\n          });\n        } else {\n          let yy =\n            activeArea === -1 ? vals.overall : vals.districtWise[activeArea];\n          console.log(yy);\n          groupWise[vals.name] = [\n            {\n              x: date,\n              y: yy,\n            },\n          ];\n        }\n      }\n    }\n    let newSeries = [];\n    for (const [name, vals] of Object.entries(groupWise)) {\n      newSeries.push({\n        name: name,\n        data: vals,\n      });\n    }\n    setSeries(newSeries);\n    console.log(newSeries);\n  }, [data, group, subTarget, groups, data, activeArea]);\n\n  const [options, setOptions] = useState({\n    chart: {\n      type: \"area\",\n      stacked: false,\n      height: 350,\n      zoom: {\n        type: \"x\",\n        enabled: true,\n        autoScaleYaxis: true,\n      },\n      toolbar: {\n        autoSelected: \"zoom\",\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    markers: {\n      size: 0,\n    },\n    title: {\n      text: \"Daily change\",\n      align: \"left\",\n    },\n    fill: {\n      type: \"gradient\",\n      gradient: {\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.5,\n        opacityTo: 0,\n        stops: [0, 90, 100],\n      },\n    },\n    yaxis: {\n      title: {\n        text: allTargets[target].subTargets[subTarget].name,\n      },\n    },\n    xaxis: {\n      type: \"datetime\",\n    },\n    tooltip: {\n      shared: false,\n      y: {\n        formatter: function (val) {\n          return val;\n        },\n      },\n    },\n  });\n  return (\n    <ReactApexChart\n      options={options}\n      series={series}\n      type=\"area\"\n      height={350}\n    />\n  );\n}\n","import { React, useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\nexport default function PieChart({ data, date, activeArea }) {\n  const [series, setSeries] = useState(null);\n\n  const getLabels = () => {\n    let newlabels = [];\n    for (const [key, value] of Object.entries(data[date])) {\n      newlabels.push(value.name);\n    }\n    return newlabels;\n  };\n\n  useEffect(() => {\n    let newseries = [];\n    for (const [key, value] of Object.entries(data[date])) {\n      if (activeArea === -1) newseries.push(value.overall);\n      else {\n        if (value.districtWise[activeArea] > 0)\n          newseries.push(value.districtWise[activeArea]);\n        else continue;\n      }\n    }\n    setSeries(newseries);\n  }, [data, date, activeArea, setSeries]);\n\n  const [options, setOptions] = useState({\n    chart: {\n      width: 380,\n      type: \"pie\",\n    },\n    title: {\n      text: \"Paracetamol stock\",\n      align: \"left\",\n    },\n    labels: getLabels(),\n    responsive: [\n      {\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200,\n          },\n          legend: {\n            position: \"bottom\",\n          },\n        },\n      },\n    ],\n  });\n  if (series === null) return <div>Fetching</div>;\n  else\n    return (\n      <ReactApexChart\n        options={options}\n        series={series}\n        type=\"pie\"\n        height={350}\n      />\n    );\n}\n","import { faHome } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useHistory } from \"react-router-dom\";\nimport { React, useState, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport Dropdown from \"../Components/Dropdown\";\nimport Table from \"../Components/Table\";\nimport GeoChart from \"../Components/GeoChart\";\nimport TimeSeries from \"../Components/TimeSeries\";\nimport PieChart from \"../Components/PieChart\";\nimport httpClient from \"../Util/httpClient\";\nimport { flexbox } from \"@mui/system\";\n\nimport { BASE_URL } from \"../Util/base\";\nexport default function Infographics({\n  demography,\n  setDemography,\n  target,\n  setTarget,\n  subTarget,\n  setSubTarget,\n  allTargets,\n  states,\n}) {\n  let today = new Date().toISOString().substr(0, 10);\n  let history = useHistory();\n  const [activeArea, setActiveArea] = useState(-1);\n  const [data, setData] = useState(null);\n  const [date, setDate] = useState(today);\n  const [group, setGroup] = useState(0);\n  const [groups, setGroups] = useState(null);\n  const [area, setArea] = useState(null);\n\n  const fetchAreaDetails = async (id) => {\n    try {\n      const resp = await httpClient.get(BASE_URL + \"district/\" + id);\n      setArea(resp.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const fetchData = async (id) => {\n    try {\n      const resp = await httpClient.get(BASE_URL + \"records/\" + id);\n      //console.log(resp.data);\n      setData(resp.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    if (activeArea === -1) setArea(null);\n    else {\n      fetchAreaDetails(activeArea);\n    }\n  }, [activeArea, setArea]);\n\n  useEffect(() => {\n    fetchData(allTargets[target].subTargets[subTarget].id);\n  }, [subTarget, target, allTargets]);\n\n  useEffect(() => {\n    if (data !== null && groups === null) {\n      let newGroups = [];\n      for (const [key, value] of Object.entries(data[date])) {\n        newGroups.push(key);\n      }\n      setGroups((groups) => newGroups);\n    }\n  }, [data, groups, group, date]);\n\n  if (data === null || groups === null) return <div>Fetching...</div>;\n  else\n    return (\n      <div className=\"infographics\">\n        <div className=\"options-area\">\n          <div className=\"left\">\n            <Dropdown\n              list={groups.map((item) => data[date][item].name)}\n              label={\"Select Group\"}\n              displayed={group}\n              setDisplayed={setGroup}\n            />\n          </div>\n          <div className=\"middle\">\n            <Dropdown\n              list={allTargets.map((item) => item.name)}\n              label={\"Select Statistics\"}\n              displayed={target}\n              setDisplayed={setTarget}\n            />\n          </div>\n          <div className=\"right\">\n            <Dropdown\n              list={allTargets[target].subTargets.map((item) => item.name)}\n              label={\"Select Sub Category\"}\n              displayed={subTarget}\n              setDisplayed={setSubTarget}\n            />\n          </div>\n        </div>\n        <div className=\"map-area\">\n          <GeoChart\n            subTarget={subTarget}\n            target={target}\n            myData={data}\n            activeArea={activeArea}\n            setActiveArea={setActiveArea}\n            demography={demography}\n            states={states}\n            date={date}\n            group={group}\n            groups={groups}\n          />\n          <div className=\"details-area\">\n            <div className=\"main-details\">\n              <div className=\"left\">\n                <h1>\n                  {area === null ? \"India\" : area.name + \", \" + area.state}\n                </h1>\n              </div>\n              <div className=\"right\">\n                <p>\n                  Population:&emsp;\n                  {area === null\n                    ? \"1.3B\"\n                    : area.population === null\n                    ? \"Unknown\"\n                    : area.population}\n                </p>\n                <p>\n                  Sex Ratio:&emsp;\n                  {area === null\n                    ? \"948\"\n                    : area.sexRatio === null\n                    ? \"Unknown\"\n                    : area.sexRatio}\n                </p>\n              </div>\n            </div>\n            {<Table activeArea={activeArea} />}\n          </div>\n        </div>\n        <div className=\"all-districts-chart\">\n          {/* <ReactApexChart\n          type=\"bar\"\n          height=\"400px\"\n          options={options}\n          series={getSeries()}\n        /> */}\n        </div>\n        <div className=\"bottom\">\n          <div className=\"time-series-chart\">\n            <TimeSeries\n              group={group}\n              groups={groups}\n              activeArea={activeArea}\n              date={date}\n              setDate={setDate}\n              data={data}\n              subTarget={subTarget}\n              allTargets={allTargets}\n              target={target}\n            />\n          </div>\n          <div\n            className=\"pie-chart\"\n            style={{ display: \"flex\", justifyContent: \"space-around\" }}\n          >\n            <PieChart data={data} date={date} activeArea={activeArea} />\n          </div>\n        </div>\n      </div>\n    );\n}\n\n//const [options] = useState({\n//   // annotations: {\n//   //   points: [\n//   //     {\n//   //       x: \"Rajasthan\",\n//   //       label: {\n//   //         borderColor: \"#775DD0\",\n//   //         offsetY: 0,\n//   //         style: {\n//   //           color: \"#fff\",\n//   //           background: \"#775DD0\",\n//   //         },\n//   //         text: \"Average State Value\",\n//   //       },\n//   //     },\n//   //   ],\n//   // },\n//   chart: {\n//     events: {\n//       dataPointSelection: (event, chartContext, config) => {\n//         if (config.selectedDataPoints[0].length) {\n//           let district =\n//             chartContext.data.twoDSeriesX[config.selectedDataPoints[0][0]];\n//           // console.log(district);\n//           setActiveArea(data[demography + \"_indices\"][district]);\n//         } else {\n//           setActiveArea(-1);\n//         }\n//       },\n//     },\n//   },\n//   plotOptions: {\n//     bar: {\n//       borderRadius: 10,\n//       columnWidth: \"100%\",\n//     },\n//   },\n//   stroke: {\n//     width: 2,\n//   },\n\n//   grid: {\n//     row: {\n//       colors: [\"#fff\", \"#f2f2f2\"],\n//     },\n//   },\n//   xaxis: {\n//     labels: {\n//       rotate: -45,\n//     },\n//   },\n//   yaxis: {\n//     title: {\n//       text: \"Score\",\n//     },\n//   },\n//   fill: {\n//     type: \"gradient\",\n//     gradient: {\n//       shade: \"light\",\n//       type: \"horizontal\",\n//       shadeIntensity: 0.25,\n//       gradientToColors: undefined,\n//       inverseColors: true,\n//       opacityFrom: 0.85,\n//       opacityTo: 0.85,\n//       stops: [50, 0, 100],\n//     },\n//   },\n// });\n// function getSeries() {\n//   console.log(allTargets[target]);\n//   var vals = [];\n//   for (let i = 0; i < 10; i++) {\n//     vals.push({ x: i, y: 100 * Math.random() });\n//   }\n//   return [\n//     {\n//       name: \"Score\",\n//       data: vals,\n//     },\n//   ];\n// }\n","import React from \"react\";\n\nexport default function NotFound() {\n  return <h1>404 Not found</h1>;\n}\n","import { React, useState } from \"react\";\nimport httpClient from \"../Util/httpClient\";\nimport { useHistory } from \"react-router-dom\";\nimport { BASE_URL } from \"../Util/base\";\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let history = useHistory();\n  const logInUser = async () => {\n    const resp = await httpClient.post(BASE_URL + \"login\", {\n      email: email,\n      password: password,\n    });\n    if (resp.status === 200) window.location.href = \"/\";\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"container\">\n        <h1>Log into your account</h1>\n        <form>\n          <div>\n            <label>Email: </label>\n            <input\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"my-button text-box\"\n            />\n          </div>\n          <div>\n            <label>Password: </label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"my-button text-box\"\n            />\n          </div>\n          <div className=\"submit-button-container\">\n            <button className=\"nav-button\" type=\"button\" onClick={logInUser}>\n              Login\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { React, useEffect, useState } from \"react\";\nimport httpClient from \"../Util/httpClient\";\nimport Dropdown from \"../Components/Dropdown\";\nimport { BASE_URL } from \"../Util/base\";\nexport default function Register({ states }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [district, setDistrict] = useState(0);\n  const [state, setState] = useState(0);\n  const [districts, setDistricts] = useState(null);\n  const [groups, setGroups] = useState(null);\n  const [group, setGroup] = useState(0);\n  const fetchDistricts = async (id) => {\n    const resp = await httpClient.get(BASE_URL + \"districts/\" + id);\n    console.log(resp);\n    setDistricts(resp.data);\n  };\n  const fetchGroups = async (id) => {\n    const resp = await httpClient.get(\"//127.0.0.1:5000/groups\");\n    console.log(resp);\n    setGroups(resp.data);\n  };\n\n  useEffect(() => {\n    fetchDistricts(states[state].id);\n  }, [state]);\n\n  useEffect(() => {\n    if (groups == null) fetchGroups();\n  }, [groups]);\n\n  const registerUser = async () => {\n    const resp = await httpClient.post(\"//127.0.0.1:5000/register\", {\n      email: email,\n      password: password,\n      name: name,\n      district_id: districts[district].id,\n      phone: phone,\n      group: groups[group].id,\n    });\n    console.log(states);\n    console.log(resp);\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"container\">\n        <h1>Register your healthcare center</h1>\n        <form>\n          <div>\n            <label>Email: </label>\n            <input\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"my-button text-box\"\n            />\n          </div>\n          <div>\n            <label>Name: </label>\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              className=\"my-button text-box\"\n            />\n          </div>\n          <div>\n            <label>Password: </label>\n            <input\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"my-button text-box\"\n            />\n          </div>\n          <div>\n            <label>Phone: </label>\n            <input\n              type=\"phone\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n              className=\"my-button text-box\"\n            />\n          </div>\n          {groups && (\n            <Dropdown\n              list={groups.map((item) => item.name)}\n              label={\"Select Type\"}\n              displayed={group}\n              setDisplayed={setGroup}\n            />\n          )}\n          {states && (\n            <Dropdown\n              list={states.map((item) => item.name)}\n              label={\"Select State\"}\n              displayed={state}\n              setDisplayed={setState}\n            />\n          )}\n          {districts && (\n            <Dropdown\n              list={districts.map((item) => item.name)}\n              label={\"Select District\"}\n              displayed={district}\n              setDisplayed={setDistrict}\n            />\n          )}\n          <div className=\"submit-button-container\">\n            <button type=\"button\" className=\"nav-button\" onClick={registerUser}>\n              Register\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","let colors = [\n  {\n    bg: \"#ffe4e4\",\n    fg: \"#fc043c\",\n  },\n  {\n    bg: \"#e8ecfc\",\n    fg: \"#047cfc\",\n  },\n  {\n    bg: \"#e8f4e4\",\n    fg: \"#2ca444\",\n  },\n  {\n    bg: \"#e8e4f4\",\n    fg: \"#4842b1\",\n  },\n  {\n    bg: \"#ffecec\",\n    fg: \"#dd5f8a\",\n  },\n];\nexport default colors;\n","import { React, useEffect, useState } from \"react\";\nimport httpClient from \"../Util/httpClient\";\nimport Dropdown from \"../Components/Dropdown\";\nimport { BASE_URL } from \"../Util/base\";\nexport default function NewRecord({ targets }) {\n  const [data, setData] = useState(0);\n  const [target, setTarget] = useState(0);\n  const [subTarget, setSubTarget] = useState(0);\n  const [status, setStatus] = useState(null);\n  const addRecord = async () => {\n    const resp = await httpClient.post(BASE_URL + \"new\", {\n      sub_target_id: targets[target].subTargets[subTarget].id,\n      value: data,\n    });\n    console.log(resp);\n    setStatus(resp.data.message);\n  };\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"container\">\n        <h1>Add today's statistics</h1>\n        <form>\n          <div>\n            <label>Value: </label>\n            <input\n              type=\"text\"\n              value={data}\n              onChange={(e) => setData(e.target.value)}\n              className=\"my-button text-box\"\n            />\n          </div>\n          {targets && (\n            <Dropdown\n              list={targets.map((item) => item.name)}\n              label={\"Select Categoy\"}\n              displayed={target}\n              setDisplayed={setTarget}\n            />\n          )}\n          {targets && (\n            <Dropdown\n              list={targets[target].subTargets.map((item) => item.name)}\n              label={\"Select Category II\"}\n              displayed={subTarget}\n              setDisplayed={setSubTarget}\n            />\n          )}\n          <div className=\"submit-button-container\">\n            <button type=\"button\" className=\"nav-button\" onClick={addRecord}>\n              Add\n            </button>\n          </div>\n          {status && <span>{status}</span>}\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { React, useState, useEffect } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport Infographics from \"./Pages/Infographics\";\nimport NotFound from \"./Pages/NotFound\";\nimport Login from \"./Pages/Login\";\nimport Register from \"./Pages/Register\";\nimport Navbar from \"./Components/Navbar\";\nimport LoadingScreen from \"react-loading-screen\";\nimport colors from \"./Components/colors\";\nimport \"./App.scss\";\nimport httpClient from \"./Util/httpClient\";\nimport NewRecord from \"./Pages/NewRecord\";\nimport { BASE_URL } from \"./Util/base\";\n\nexport default function App() {\n  const [demography, setDemography] = useState(\"state\");\n  const [subTarget, setSubTarget] = useState(0);\n  const [target, setTarget] = useState(0);\n  const [allTargets, setAllTargets] = useState(null);\n  const [user, setUser] = useState(null);\n  const [states, setStates] = useState(null);\n\n  const fetchStates = async () => {\n    const resp = await httpClient.get(BASE_URL + \"states\");\n    console.log(resp);\n    setStates(resp.data);\n  };\n\n  const fetchTargets = async () => {\n    try {\n      let resp = await httpClient.get(BASE_URL + \"/targets\");\n      console.log(resp);\n      setAllTargets(resp.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const fetchUser = async () => {\n    try {\n      let resp = await httpClient.get(BASE_URL + \"@me\");\n      setUser(resp.data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    if (states === null) fetchStates();\n  }, [states]);\n\n  useEffect(() => {\n    if (allTargets === null) fetchTargets();\n  }, [allTargets]);\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  // console.log(data);\n  if (allTargets === null) return <div>Fetching...</div>;\n  else\n    return (\n      <div className=\"App\">\n        <div className=\"header\">\n          <Navbar user={user} />\n        </div>\n        <div className=\"body\">\n          <Switch>\n            <Route exact path=\"/login\" render={(props) => <Login />} />\n            <Route\n              exact\n              path=\"/new\"\n              render={(props) => <NewRecord targets={allTargets} user={user} />}\n            />\n            <Route\n              exact\n              path=\"/register\"\n              render={(props) => <Register states={states} />}\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <Home\n                  allTargets={allTargets}\n                  setTarget={setTarget}\n                  demography={demography}\n                  setDemography={setDemography}\n                  colors={colors}\n                  user={user}\n                />\n              )}\n            />\n            <Route\n              path=\"/infographics\"\n              render={(props) => (\n                <Infographics\n                  demography={demography}\n                  setDemography={setDemography}\n                  target={target}\n                  setTarget={setTarget}\n                  subTarget={subTarget}\n                  setSubTarget={setSubTarget}\n                  allTargets={allTargets}\n                  states={states}\n                />\n              )}\n            />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n        <div className=\"footer\">\n          <div className=\"container\">\n            <div>\n              <h1>Quick Links</h1>\n              <ul>\n                <li>Github</li>\n                <li>Some link</li>\n                <li>Another link</li>\n              </ul>\n            </div>\n            <div>\n              <h1>Developed by:</h1>\n              <p>\n                Indian Institute of Technology, Delhi <br />\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}